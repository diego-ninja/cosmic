#!/usr/bin/env php
<?php

use Ninja\Cosmic\Application\Application;
use Ninja\Cosmic\Environment\Env;
use Ninja\Cosmic\Environment\Exception\EnvironmentNotFoundException;
use Ninja\Cosmic\Terminal\Terminal;

use function Cosmic\find_env;
use function Cosmic\is_phar;

if (false === in_array(PHP_SAPI, ['cli', 'phpdbg', 'embed'], true)) {
    echo PHP_EOL . 'This app may only be invoked from a command line, got "' . PHP_SAPI . '"' . PHP_EOL;
    exit(1);
}

(static function (): void {
    if (file_exists($autoload = __DIR__ . '/vendor/autoload.php')) {
        include_once $autoload;
        return;
    }
    throw new RuntimeException('Unable to find the Composer autoloader.');
})();

try {
    $env_file = find_env();
} catch (EnvironmentNotFoundException $e) {
    Terminal::reset();
    Terminal::output()->writeln("<error>You need at least one environment file present to run a cosmic app. Please create them before continue.</error>");
    die(1);
}

$dotenv = is_phar() ?
    Dotenv\Dotenv::createMutable(Phar::running(), $env_file) :
    Dotenv\Dotenv::createMutable(getcwd(), $env_file);

$dotenv->safeLoad();

try {
    Terminal::loadThemes(__DIR__ . "/themes");
    Terminal::enableTheme(Env::get("APP_THEME", "default"));

    $app = new Application(
        name: sprintf("%s %s", Terminal::getTheme()->getAppIcon(), Env::get("APP_NAME")),
        version: Env::appVersion()
    );

    $app->setAutoExit(false);
    $app->run();

} catch (Throwable $e) {
    throw new RuntimeException($e->getMessage(), $e->getCode(), $e);
}
